"use strict";
/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("./homepage.component.css.shim.ngstyle");
var i1 = require("@angular/core");
var i2 = require("@angular/router");
var i3 = require("@angular/common");
var i4 = require("../../../../../src/app/homepage/homepage.component");
var i5 = require("@angular/http");
var styles_HomepageComponent = [i0.styles];
exports.RenderType_HomepageComponent = i1.ɵcrt({ encapsulation: 0,
    styles: styles_HomepageComponent, data: {} });
function View_HomepageComponent_1(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 3, 'a', [], [[1, 'target', 0], [8, 'href', 4]], [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            if (('click' === en)) {
                var pd_0 = (i1.ɵnov(_v, 1).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i1.ɵdid(1, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, 'routerLink'] }, null), i1.ɵpad(2, 1), (_l()(), i1.ɵted(3, null, ['', '']))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_2 = _ck(_v, 2, 0, _co.page['action']['internalUrl']);
        _ck(_v, 1, 0, currVal_2);
    }, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = i1.ɵnov(_v, 1).target;
        var currVal_1 = i1.ɵnov(_v, 1).href;
        _ck(_v, 0, 0, currVal_0, currVal_1);
        var currVal_3 = _co.page['action']['label'];
        _ck(_v, 3, 0, currVal_3);
    });
}
function View_HomepageComponent_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 12, 'div', [['class',
                'homepage-jumbo']], null, null, null, null, null)),
        i1.ɵdid(1, 278528, null, 0, i3.NgStyle, [i1.KeyValueDiffers, i1.ElementRef,
            i1.Renderer], { ngStyle: [0, 'ngStyle'] }, null), i1.ɵpod(2, { 'background-image': 0 }),
        (_l()(), i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵeld(4, 0, null, null, 7, 'div', [['class', 'homepage-content-zone']], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, ['\n		'])), (_l()(), i1.ɵeld(6, 0, null, null, 1, 'h1', [], null, null, null, null, null)), (_l()(), i1.ɵted(7, null, ['', ''])), (_l()(), i1.ɵted(-1, null, ['\n		'])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_HomepageComponent_1)), i1.ɵdid(10, 16384, null, 0, i3.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, 'ngIf'] }, null),
        (_l()(), i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵted(-1, null, ['\n'])), (_l()(), i1.ɵted(-1, null, ['\n'])), (_l()(), i1.ɵeld(14, 0, null, null, 3, 'div', [['class', 'homepage-slogan']], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵeld(16, 0, null, null, 0, 'span', [], [[8, 'innerHTML', 1]], null, null, null, null)), (_l()(), i1.ɵted(-1, null, ['\n'])), (_l()(), i1.ɵted(-1, null, ['\n']))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _ck(_v, 2, 0, (('url(' + _co.page['image']) + ')'));
        _ck(_v, 1, 0, currVal_0);
        var currVal_2 = _co.page['action'];
        _ck(_v, 10, 0, currVal_2);
    }, function (_ck, _v) {
        var _co = _v.component;
        var currVal_1 = _co.page['callout'];
        _ck(_v, 7, 0, currVal_1);
        var currVal_3 = _co.toMarkdown(_co.page['content']);
        _ck(_v, 16, 0, currVal_3);
    });
}
exports.View_HomepageComponent_0 = View_HomepageComponent_0;
function View_HomepageComponent_Host_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, 'app-homepage', [], null, null, null, View_HomepageComponent_0, exports.RenderType_HomepageComponent)), i1.ɵdid(1, 114688, null, 0, i4.HomepageComponent, [i5.Http, i2.Router, i2.ActivatedRoute], null, null)], function (_ck, _v) {
        _ck(_v, 1, 0);
    }, null);
}
exports.View_HomepageComponent_Host_0 = View_HomepageComponent_Host_0;
exports.HomepageComponentNgFactory = i1.ɵccf('app-homepage', i4.HomepageComponent, View_HomepageComponent_Host_0, {}, {}, []);
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL2hvbWUvYmx1ZWJlYXJkL2ZsYXRsYW5kY2h1cmNoLmNvbS9zcmMvYXBwL2hvbWVwYWdlL2hvbWVwYWdlLmNvbXBvbmVudC5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9ob21lL2JsdWViZWFyZC9mbGF0bGFuZGNodXJjaC5jb20vc3JjL2FwcC9ob21lcGFnZS9ob21lcGFnZS5jb21wb25lbnQudHMiLCJuZzovLy9ob21lL2JsdWViZWFyZC9mbGF0bGFuZGNodXJjaC5jb20vc3JjL2FwcC9ob21lcGFnZS9ob21lcGFnZS5jb21wb25lbnQuaHRtbCIsIm5nOi8vL2hvbWUvYmx1ZWJlYXJkL2ZsYXRsYW5kY2h1cmNoLmNvbS9zcmMvYXBwL2hvbWVwYWdlL2hvbWVwYWdlLmNvbXBvbmVudC50cy5Ib21lcGFnZUNvbXBvbmVudF9Ib3N0Lmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiICIsIjxkaXYgY2xhc3M9XCJob21lcGFnZS1qdW1ib1wiIFtuZ1N0eWxlXT1cInsnYmFja2dyb3VuZC1pbWFnZSc6ICd1cmwoJyArIHBhZ2VbJ2ltYWdlJ10gKyAnKSd9XCI+XG5cdDxkaXYgY2xhc3M9XCJob21lcGFnZS1jb250ZW50LXpvbmVcIj5cblx0XHQ8aDE+e3sgcGFnZVsnY2FsbG91dCddIH19PC9oMT5cblx0XHQ8YSBbcm91dGVyTGlua109XCJbcGFnZVsnYWN0aW9uJ11bJ2ludGVybmFsVXJsJ11dXCIgKm5nSWY9XCJwYWdlWydhY3Rpb24nXVwiPnt7IHBhZ2VbJ2FjdGlvbiddWydsYWJlbCddIH19PC9hPlxuXHQ8L2Rpdj5cbjwvZGl2PlxuPGRpdiBjbGFzcz1cImhvbWVwYWdlLXNsb2dhblwiPlxuXHQ8c3BhbiBbaW5uZXJIdG1sXT1cInRvTWFya2Rvd24ocGFnZVsnY29udGVudCddKVwiPjwvc3Bhbj5cbjwvZGl2PlxuIiwiPGFwcC1ob21lcGFnZT48L2FwcC1ob21lcGFnZT4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JDR0U7TUFBQTtRQUFBO1FBQUE7VUFBQTtjQUFBO1VBQUE7UUFBQTtRQUFBO01BQUEsdUNBQUE7TUFBQTtNQUFBLHNCQUFHLE1BQXNFOzs7SUFBdEU7SUFBSCxXQUFHLFNBQUg7OztJQUFBO0lBQUE7SUFBQSxXQUFBLG1CQUFBO0lBQXlFO0lBQUE7Ozs7b0JBSDNFO01BQUE7YUFBQTtxQkFBQSxnREFBNEI7TUFBK0QsMkNBQzFGO1VBQUE7VUFBQSwwREFBbUM7VUFBQSx5QkFDbEM7VUFBQTtVQUFBLGdCQUFJLDBDQUEwQjtVQUFBLHlCQUM5QjtVQUFBLGtEQUFBO1VBQUE7TUFBMEcsMkNBQ3JHO1VBQUEsU0FDRCwwQ0FDTjtVQUFBO1VBQUEsMERBQTZCO1VBQUEsd0JBQzVCO1VBQUE7VUFBQSxnQkFBdUQsMENBQ2xEO1VBQUE7O0lBUnNCO0lBQTVCLFdBQTRCLFNBQTVCO0lBR29EO0lBQWxELFlBQWtELFNBQWxEOzs7SUFESTtJQUFBO0lBS0M7SUFBTixZQUFNLFNBQU47Ozs7b0JDUEQ7TUFBQTtrQ0FBQSxVQUFBO01BQUE7SUFBQTs7OzsifQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,