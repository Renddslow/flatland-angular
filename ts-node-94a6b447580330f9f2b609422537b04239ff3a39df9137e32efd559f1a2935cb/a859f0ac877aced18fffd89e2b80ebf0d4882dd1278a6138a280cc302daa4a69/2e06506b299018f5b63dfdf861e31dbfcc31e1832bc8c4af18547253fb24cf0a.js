"use strict";
/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("./footer.component.css.shim.ngstyle");
var i1 = require("@angular/core");
var i2 = require("./footer-nav/footer-nav.component.ngfactory");
var i3 = require("../../../../../src/app/footer/footer-nav/footer-nav.component");
var i4 = require("./footer-social/footer-social.component.ngfactory");
var i5 = require("../../../../../src/app/footer/footer-social/footer-social.component");
var i6 = require("../../../../../src/app/footer/footer.component");
var styles_FooterComponent = [i0.styles];
exports.RenderType_FooterComponent = i1.ɵcrt({ encapsulation: 0,
    styles: styles_FooterComponent, data: {} });
function View_FooterComponent_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 7, 'footer', [], null, null, null, null, null)), (_l()(),
            i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵeld(2, 0, null, null, 1, 'footer-nav', [], null, null, null, i2.View_FooterNavComponent_0, i2.RenderType_FooterNavComponent)), i1.ɵdid(3, 49152, null, 0, i3.FooterNavComponent, [], { navigation: [0, 'navigation'] }, null), (_l()(), i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵeld(5, 0, null, null, 1, 'footer-social', [], null, null, null, i4.View_FooterSocialComponent_0, i4.RenderType_FooterSocialComponent)), i1.ɵdid(6, 49152, null, 0, i5.FooterSocialComponent, [], { socialLinks: [0, 'socialLinks'] }, null), (_l()(), i1.ɵted(-1, null, ['\n'])), (_l()(), i1.ɵted(-1, null, ['\n']))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.footer.navigation;
        _ck(_v, 3, 0, currVal_0);
        var currVal_1 = _co.footer.social;
        _ck(_v, 6, 0, currVal_1);
    }, null);
}
exports.View_FooterComponent_0 = View_FooterComponent_0;
function View_FooterComponent_Host_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, 'app-footer', [], null, null, null, View_FooterComponent_0, exports.RenderType_FooterComponent)), i1.ɵdid(1, 114688, null, 0, i6.FooterComponent, [], null, null)], function (_ck, _v) {
        _ck(_v, 1, 0);
    }, null);
}
exports.View_FooterComponent_Host_0 = View_FooterComponent_Host_0;
exports.FooterComponentNgFactory = i1.ɵccf('app-footer', i6.FooterComponent, View_FooterComponent_Host_0, {}, {}, []);
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL2hvbWUvYmx1ZWJlYXJkL2ZsYXRsYW5kY2h1cmNoLmNvbS9zcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50Lm5nZmFjdG9yeS50cyIsInZlcnNpb24iOjMsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm5nOi8vL2hvbWUvYmx1ZWJlYXJkL2ZsYXRsYW5kY2h1cmNoLmNvbS9zcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnRzIiwibmc6Ly8vaG9tZS9ibHVlYmVhcmQvZmxhdGxhbmRjaHVyY2guY29tL3NyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuaHRtbCIsIm5nOi8vL2hvbWUvYmx1ZWJlYXJkL2ZsYXRsYW5kY2h1cmNoLmNvbS9zcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnRzLkZvb3RlckNvbXBvbmVudF9Ib3N0Lmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiICIsIjxmb290ZXI+XG5cdDxmb290ZXItbmF2IFtuYXZpZ2F0aW9uXT1cImZvb3Rlci5uYXZpZ2F0aW9uXCI+PC9mb290ZXItbmF2PlxuXHQ8Zm9vdGVyLXNvY2lhbCBbc29jaWFsTGlua3NdPVwiZm9vdGVyLnNvY2lhbFwiPjwvZm9vdGVyLXNvY2lhbD5cbjwvZm9vdGVyPlxuIiwiPGFwcC1mb290ZXI+PC9hcHAtZm9vdGVyPiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JDQUE7TUFBQSx3RUFBUTthQUFBLDRCQUNQO01BQUE7c0NBQUEsVUFBQTtNQUFBLDJEQUEwRDtNQUFBLHdCQUMxRDtNQUFBO3lDQUFBLFVBQUE7TUFBQSw2REFBNkQ7TUFBQSx1QkFDckQ7O0lBRkk7SUFBWixXQUFZLFNBQVo7SUFDZTtJQUFmLFdBQWUsU0FBZjs7OztvQkNGRDtNQUFBO2dDQUFBLFVBQUE7TUFBQTtJQUFBOzs7OyJ9
//# sourceMappingURL=data:application/json;charset=utf-8;base64,