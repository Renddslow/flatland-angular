"use strict";
/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("./page-stack.component.css.shim.ngstyle");
var i1 = require("@angular/core");
var i2 = require("@angular/router");
var i3 = require("@angular/common");
var i4 = require("../../../../../../src/app/page/page-stack/page-stack.component");
var styles_PageStackComponent = [i0.styles];
exports.RenderType_PageStackComponent = i1.ɵcrt({ encapsulation: 0,
    styles: styles_PageStackComponent, data: {} });
function View_PageStackComponent_2(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 3, 'a', [['class',
                'cta']], [[1, 'target', 0], [8, 'href', 4]], [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            if (('click' === en)) {
                var pd_0 = (i1.ɵnov(_v, 1).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), i1.ɵdid(1, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, 'routerLink'] }, null), i1.ɵpad(2, 1), (_l()(), i1.ɵted(3, null, ['', '']))], function (_ck, _v) {
        var currVal_2 = (_ck(_v, 2, 0, '/') + _v.parent.context.$implicit['action']['internalUrl']);
        _ck(_v, 1, 0, currVal_2);
    }, function (_ck, _v) {
        var currVal_0 = i1.ɵnov(_v, 1).target;
        var currVal_1 = i1.ɵnov(_v, 1).href;
        _ck(_v, 0, 0, currVal_0, currVal_1);
        var currVal_3 = _v.parent.context.$implicit['action']['label'];
        _ck(_v, 3, 0, currVal_3);
    });
}
function View_PageStackComponent_3(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, 'a', [['class',
                'cta']], [[8, 'href', 4]], null, null, null, null)),
        (_l()(), i1.ɵted(1, null, ['', '']))], null, function (_ck, _v) {
        var currVal_0 = i1.ɵinlineInterpolate(1, '', _v.parent.context.$implicit['action']['externalUrl'], '');
        _ck(_v, 0, 0, currVal_0);
        var currVal_1 = _v.parent.context.$implicit['action']['label'];
        _ck(_v, 1, 0, currVal_1);
    });
}
function View_PageStackComponent_5(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, 'a', [], [[8, 'href', 4]], null, null, null, null)), (_l()(),
            i1.ɵted(1, null, ['', '; ']))], null, function (_ck, _v) {
        var currVal_0 = i1.ɵinlineInterpolate(1, '', _v.context.$implicit['uri'], '');
        _ck(_v, 0, 0, currVal_0);
        var currVal_1 = _v.context.$implicit['title'];
        _ck(_v, 1, 0, currVal_1);
    });
}
function View_PageStackComponent_4(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, 'p', [], null, null, null, null, null)), (_l()(),
            i1.ɵted(-1, null, ['\n			'])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_PageStackComponent_5)), i1.ɵdid(3, 802816, null, 0, i3.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0,
                'ngForOf'] }, null), (_l()(), i1.ɵted(-1, null, ['\n		']))], function (_ck, _v) {
        var currVal_0 = _v.parent.context.$implicit['lists'];
        _ck(_v, 3, 0, currVal_0);
    }, null);
}
function View_PageStackComponent_1(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 15, 'div', [['class',
                'fc-stack-item']], null, null, null, null, null)),
        (_l()(), i1.ɵted(-1, null, ['\n		'])), (_l()(), i1.ɵeld(2, 0, null, null, 1, 'h3', [], null, null, null, null, null)), (_l()(), i1.ɵted(3, null, ['', ''])),
        (_l()(), i1.ɵted(-1, null, ['\n		'])), (_l()(), i1.ɵeld(5, 0, null, null, 0, 'div', [], [[8, 'innerHTML', 1]], null, null, null, null)), (_l()(), i1.ɵted(-1, null, ['\n		'])),
        (_l()(), i1.ɵand(16777216, null, null, 1, null, View_PageStackComponent_2)),
        i1.ɵdid(8, 16384, null, 0, i3.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, 'ngIf'] }, null), (_l()(), i1.ɵted(-1, null, ['\n		'])),
        (_l()(), i1.ɵand(16777216, null, null, 1, null, View_PageStackComponent_3)),
        i1.ɵdid(11, 16384, null, 0, i3.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, 'ngIf'] }, null), (_l()(), i1.ɵted(-1, null, ['\n		'])),
        (_l()(), i1.ɵand(16777216, null, null, 1, null, View_PageStackComponent_4)),
        i1.ɵdid(14, 16384, null, 0, i3.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, 'ngIf'] }, null), (_l()(), i1.ɵted(-1, null, ['\n	']))], function (_ck, _v) {
        var currVal_2 = (_v.context.$implicit['action'] && _v.context.$implicit['action']['internalUrl']);
        _ck(_v, 8, 0, currVal_2);
        var currVal_3 = (_v.context.$implicit['action'] && _v.context.$implicit['action']['externalUrl']);
        _ck(_v, 11, 0, currVal_3);
        var currVal_4 = _v.context.$implicit['lists'];
        _ck(_v, 14, 0, currVal_4);
    }, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _v.context.$implicit['title'];
        _ck(_v, 3, 0, currVal_0);
        var currVal_1 = _co.toMarkdown(_v.context.$implicit['content']);
        _ck(_v, 5, 0, currVal_1);
    });
}
function View_PageStackComponent_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, 'div', [['class',
                'fc-stack']], null, null, null, null, null)),
        (_l()(), i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_PageStackComponent_1)), i1.ɵdid(3, 802816, null, 0, i3.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, 'ngForOf'] }, null), (_l()(), i1.ɵted(-1, null, ['\n'])), (_l()(), i1.ɵted(-1, null, ['\n']))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.stack;
        _ck(_v, 3, 0, currVal_0);
    }, null);
}
exports.View_PageStackComponent_0 = View_PageStackComponent_0;
function View_PageStackComponent_Host_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, 'page-stack', [], null, null, null, View_PageStackComponent_0, exports.RenderType_PageStackComponent)), i1.ɵdid(1, 49152, null, 0, i4.PageStackComponent, [], null, null)], null, null);
}
exports.View_PageStackComponent_Host_0 = View_PageStackComponent_Host_0;
exports.PageStackComponentNgFactory = i1.ɵccf('page-stack', i4.PageStackComponent, View_PageStackComponent_Host_0, { stack: 'stack' }, {}, []);
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL2hvbWUvYmx1ZWJlYXJkL2ZsYXRsYW5kY2h1cmNoLmNvbS9zcmMvYXBwL3BhZ2UvcGFnZS1zdGFjay9wYWdlLXN0YWNrLmNvbXBvbmVudC5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9ob21lL2JsdWViZWFyZC9mbGF0bGFuZGNodXJjaC5jb20vc3JjL2FwcC9wYWdlL3BhZ2Utc3RhY2svcGFnZS1zdGFjay5jb21wb25lbnQudHMiLCJuZzovLy9ob21lL2JsdWViZWFyZC9mbGF0bGFuZGNodXJjaC5jb20vc3JjL2FwcC9wYWdlL3BhZ2Utc3RhY2svcGFnZS1zdGFjay5jb21wb25lbnQuaHRtbCIsIm5nOi8vL2hvbWUvYmx1ZWJlYXJkL2ZsYXRsYW5kY2h1cmNoLmNvbS9zcmMvYXBwL3BhZ2UvcGFnZS1zdGFjay9wYWdlLXN0YWNrLmNvbXBvbmVudC50cy5QYWdlU3RhY2tDb21wb25lbnRfSG9zdC5odG1sIl0sInNvdXJjZXNDb250ZW50IjpbIiAiLCI8ZGl2IGNsYXNzPVwiZmMtc3RhY2tcIj5cblx0PGRpdiBjbGFzcz1cImZjLXN0YWNrLWl0ZW1cIiAqbmdGb3I9XCJsZXQgc3RhY2tJdGVtIG9mIHN0YWNrXCI+XG5cdFx0PGgzPnt7IHN0YWNrSXRlbVsndGl0bGUnXSB9fTwvaDM+XG5cdFx0PGRpdiBbaW5uZXJIdG1sXT1cInRvTWFya2Rvd24oc3RhY2tJdGVtWydjb250ZW50J10pXCI+PC9kaXY+XG5cdFx0PGEgY2xhc3M9XCJjdGFcIiAqbmdJZj1cInN0YWNrSXRlbVsnYWN0aW9uJ10gJiYgc3RhY2tJdGVtWydhY3Rpb24nXVsnaW50ZXJuYWxVcmwnXVwiIFtyb3V0ZXJMaW5rXT1cIlsnLyddICsgc3RhY2tJdGVtWydhY3Rpb24nXVsnaW50ZXJuYWxVcmwnXVwiPnt7IHN0YWNrSXRlbVsnYWN0aW9uJ11bJ2xhYmVsJ10gfX08L2E+XG5cdFx0PGEgY2xhc3M9XCJjdGFcIiAqbmdJZj1cInN0YWNrSXRlbVsnYWN0aW9uJ10gJiYgc3RhY2tJdGVtWydhY3Rpb24nXVsnZXh0ZXJuYWxVcmwnXVwiIGhyZWY9XCJ7eyBzdGFja0l0ZW1bJ2FjdGlvbiddWydleHRlcm5hbFVybCddIH19XCI+e3sgc3RhY2tJdGVtWydhY3Rpb24nXVsnbGFiZWwnXSB9fTwvYT5cblx0XHQ8cCAqbmdJZj1cInN0YWNrSXRlbVsnbGlzdHMnXVwiPlxuXHRcdFx0PGEgKm5nRm9yPVwibGV0IGxpbmsgb2Ygc3RhY2tJdGVtWydsaXN0cyddXCIgaHJlZj1cInt7IGxpbmtbJ3VyaSddIH19XCI+e3sgbGlua1sndGl0bGUnXSB9fTsgPC9hPlxuXHRcdDwvcD5cblx0PC9kaXY+XG48L2Rpdj5cbiIsIjxwYWdlLXN0YWNrPjwvcGFnZS1zdGFjaz4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztvQkNJRTtNQUFBO0lBQUE7SUFBQTtNQUFBO1VBQUE7TUFBQTtJQUFBO0lBQUE7RUFBQSx1Q0FBQTtNQUFBO01BQUEsc0JBQWlGLE1BQTBEOztJQUExRDtJQUFqRixXQUFpRixTQUFqRjs7SUFBQTtJQUFBO0lBQUEsV0FBQSxtQkFBQTtJQUEySTtJQUFBOzs7O29CQUMzSTtNQUFBO01BQWlJO0lBQWhEO1FBQUE7SUFBakYsV0FBaUYsU0FBakY7SUFBaUk7SUFBQTs7OztvQkFFaEk7TUFBQSx5RUFBb0U7YUFBQTtJQUF6QjtJQUEzQyxXQUEyQyxTQUEzQztJQUFvRTtJQUFBOzs7O29CQURyRTtNQUFBLHdFQUE4QjthQUFBLDhCQUM3QjtNQUFBLGlFQUFBO01BQUE7VUFBQSwyQkFBNkY7O1FBQTFGO1FBQUgsV0FBRyxTQUFIOzs7O29CQU5GO01BQUE7TUFBMkQsNENBQzFEO1VBQUE7VUFBQSw4QkFBSTtNQUE2Qiw0Q0FDakM7VUFBQTtVQUFBLDhCQUEwRDtNQUMxRDthQUFBO1VBQUEsaUNBQWlMO01BQ2pMO2FBQUE7VUFBQSxpQ0FBdUs7TUFDdks7YUFBQTtVQUFBLGlDQUVJOztRQUpXO1FBQWYsV0FBZSxTQUFmO1FBQ2U7UUFBZixZQUFlLFNBQWY7UUFDRztRQUFILFlBQUcsU0FBSDs7O1FBSkk7UUFBQTtRQUNDO1FBQUwsV0FBSyxTQUFMOzs7O29CQUhGO01BQUE7TUFBc0IsMkNBQ3JCO1VBQUEsaUVBQUE7VUFBQTtVQUFBLHVDQVFNO1VBQUEsU0FDRDs7SUFUc0I7SUFBM0IsV0FBMkIsU0FBM0I7Ozs7b0JDREQ7TUFBQTttQ0FBQSxVQUFBO01BQUE7OzsifQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,