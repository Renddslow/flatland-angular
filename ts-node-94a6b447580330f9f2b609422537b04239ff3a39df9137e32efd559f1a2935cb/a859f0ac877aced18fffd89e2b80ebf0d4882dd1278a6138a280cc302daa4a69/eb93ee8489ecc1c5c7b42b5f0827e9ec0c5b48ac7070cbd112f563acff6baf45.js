"use strict";
/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("./footer-social.component.css.shim.ngstyle");
var i1 = require("@angular/core");
var i2 = require("@angular/common");
var i3 = require("../../../../../../src/app/footer/footer-social/footer-social.component");
var styles_FooterSocialComponent = [i0.styles];
exports.RenderType_FooterSocialComponent = i1.ɵcrt({ encapsulation: 0,
    styles: styles_FooterSocialComponent, data: {} });
function View_FooterSocialComponent_1(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, 'li', [], null, null, null, null, null)), (_l()(),
            i1.ɵted(-1, null, ['\n			'])), (_l()(), i1.ɵeld(2, 0, null, null, 1, 'a', [], [[8, 'href', 4]], null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 0, 'i', [], [[8, 'className', 0]], null, null, null, null)),
        (_l()(), i1.ɵted(-1, null, ['\n		']))], null, function (_ck, _v) {
        var currVal_0 = i1.ɵinlineInterpolate(1, '', _v.context.$implicit.uri, '');
        _ck(_v, 2, 0, currVal_0);
        var currVal_1 = i1.ɵinlineInterpolate(1, 'fa ', _v.context.$implicit.icon, '');
        _ck(_v, 3, 0, currVal_1);
    });
}
function View_FooterSocialComponent_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 7, 'div', [['class',
                'footer-social']], null, null, null, null, null)),
        (_l()(), i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵeld(2, 0, null, null, 4, 'ul', [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, ['\n		'])),
        (_l()(), i1.ɵand(16777216, null, null, 1, null, View_FooterSocialComponent_1)),
        i1.ɵdid(5, 802816, null, 0, i2.NgForOf, [i1.ViewContainerRef, i1.TemplateRef,
            i1.IterableDiffers], { ngForOf: [0, 'ngForOf'] }, null), (_l()(), i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵted(-1, null, ['\n'])), (_l()(),
            i1.ɵted(-1, null, ['\n']))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.socialLinks;
        _ck(_v, 5, 0, currVal_0);
    }, null);
}
exports.View_FooterSocialComponent_0 = View_FooterSocialComponent_0;
function View_FooterSocialComponent_Host_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, 'footer-social', [], null, null, null, View_FooterSocialComponent_0, exports.RenderType_FooterSocialComponent)), i1.ɵdid(1, 49152, null, 0, i3.FooterSocialComponent, [], null, null)], null, null);
}
exports.View_FooterSocialComponent_Host_0 = View_FooterSocialComponent_Host_0;
exports.FooterSocialComponentNgFactory = i1.ɵccf('footer-social', i3.FooterSocialComponent, View_FooterSocialComponent_Host_0, { socialLinks: 'socialLinks' }, {}, []);
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL2hvbWUvYmx1ZWJlYXJkL2ZsYXRsYW5kY2h1cmNoLmNvbS9zcmMvYXBwL2Zvb3Rlci9mb290ZXItc29jaWFsL2Zvb3Rlci1zb2NpYWwuY29tcG9uZW50Lm5nZmFjdG9yeS50cyIsInZlcnNpb24iOjMsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm5nOi8vL2hvbWUvYmx1ZWJlYXJkL2ZsYXRsYW5kY2h1cmNoLmNvbS9zcmMvYXBwL2Zvb3Rlci9mb290ZXItc29jaWFsL2Zvb3Rlci1zb2NpYWwuY29tcG9uZW50LnRzIiwibmc6Ly8vaG9tZS9ibHVlYmVhcmQvZmxhdGxhbmRjaHVyY2guY29tL3NyYy9hcHAvZm9vdGVyL2Zvb3Rlci1zb2NpYWwvZm9vdGVyLXNvY2lhbC5jb21wb25lbnQuaHRtbCIsIm5nOi8vL2hvbWUvYmx1ZWJlYXJkL2ZsYXRsYW5kY2h1cmNoLmNvbS9zcmMvYXBwL2Zvb3Rlci9mb290ZXItc29jaWFsL2Zvb3Rlci1zb2NpYWwuY29tcG9uZW50LnRzLkZvb3RlclNvY2lhbENvbXBvbmVudF9Ib3N0Lmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiICIsIjxkaXYgY2xhc3M9XCJmb290ZXItc29jaWFsXCI+XG5cdDx1bD5cblx0XHQ8bGkgKm5nRm9yPVwibGV0IGxpbmsgb2Ygc29jaWFsTGlua3NcIj5cblx0XHRcdDxhIGhyZWY9XCJ7eyBsaW5rLnVyaSB9fVwiPjxpIGNsYXNzPVwiZmEge3sgbGluay5pY29uIH19XCI+PC9pPjwvYT5cblx0XHQ8L2xpPlxuXHQ8L3VsPlxuPC9kaXY+XG4iLCI8Zm9vdGVyLXNvY2lhbD48L2Zvb3Rlci1zb2NpYWw+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztvQkNFRTtNQUFBLHdFQUFxQzthQUFBLDhCQUNwQztNQUFBO01BQUEsZ0JBQXlCO01BQUE7TUFBc0M7SUFBNUQ7SUFBSCxXQUFHLFNBQUg7SUFBNEI7UUFBQTtJQUFILFdBQUcsU0FBSDs7OztvQkFINUI7TUFBQTtNQUEyQiwyQ0FDMUI7VUFBQTtVQUFBLDhCQUFJO01BQ0g7YUFBQTs0QkFBQSx5Q0FFSztVQUFBLHdCQUNELDBDQUNBO2lCQUFBOztJQUpBO0lBQUosV0FBSSxTQUFKOzs7O29CQ0ZGO01BQUE7c0NBQUEsVUFBQTtNQUFBOzs7OyJ9
//# sourceMappingURL=data:application/json;charset=utf-8;base64,