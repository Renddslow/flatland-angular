"use strict";
/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("./share.component.css.shim.ngstyle");
var i1 = require("@angular/core");
var i2 = require("@angular/common");
var i3 = require("../../../../../../src/app/video/share/share.component");
var styles_ShareComponent = [i0.styles];
exports.RenderType_ShareComponent = i1.ɵcrt({ encapsulation: 0,
    styles: styles_ShareComponent, data: {} });
function View_ShareComponent_2(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, 'li', [], null, null, null, null, null)), (_l()(),
            i1.ɵted(-1, null, ['\n			'])), (_l()(), i1.ɵeld(2, 0, null, null, 1, 'a', [], [[8, 'href', 4]], [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            var _co = _v.component;
            if (('click' === en)) {
                var pd_0 = (_co.openLink(_v.context.$implicit.url) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 0, 'i', [], [[8, 'className', 0]], null, null, null, null)), (_l()(), i1.ɵted(-1, null, ['\n		']))], null, function (_ck, _v) {
        var currVal_0 = _v.context.$implicit.url;
        _ck(_v, 2, 0, currVal_0);
        var currVal_1 = i1.ɵinlineInterpolate(1, 'fa ', _v.context.$implicit.icon, '');
        _ck(_v, 3, 0, currVal_1);
    });
}
function View_ShareComponent_1(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 19, 'div', [['class',
                'modal social']], null, null, null, null, null)),
        (_l()(), i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵeld(2, 0, null, null, 2, 'span', [['class', 'modal-header']], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, ['SHARE '])), (_l()(), i1.ɵeld(4, 0, null, null, 0, 'i', [['aria-hidden',
                'true'], ['class', 'fa fa-share']], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, ['\n	'])),
        (_l()(), i1.ɵeld(6, 0, null, null, 1, 'div', [['class', 'modal-close']], null, [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            var _co = _v.component;
            if (('click' === en)) {
                var pd_0 = (_co.closeModal() !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), (_l()(), i1.ɵeld(7, 0, null, null, 0, 'i', [['aria-hidden', 'true'], ['class', 'fa fa-times']], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵeld(9, 0, null, null, 4, 'ul', [], null, null, null, null, null)),
        (_l()(), i1.ɵted(-1, null, ['\n		'])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_ShareComponent_2)), i1.ɵdid(12, 802816, null, 0, i2.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, 'ngForOf'] }, null), (_l()(), i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵeld(15, 0, null, null, 0, 'input', [['id', 'fc-share-link'], ['type',
                'text']], [[8, 'value', 0]], null, null, null, null)),
        (_l()(), i1.ɵted(-1, null, ['\n	'])), (_l()(), i1.ɵeld(17, 0, null, null, 1, 'a', [['class', 'clipboard-copy'], ['href', '/watch']], null, [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            var _co = _v.component;
            if (('click' === en)) {
                var pd_0 = (_co.copyLink($event) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), (_l()(), i1.ɵted(18, null, ['', ''])),
        (_l()(), i1.ɵted(-1, null, ['\n']))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.socialLinks;
        _ck(_v, 12, 0, currVal_0);
    }, function (_ck, _v) {
        var _co = _v.component;
        var currVal_1 = i1.ɵinlineInterpolate(1, 'https://flatlandchurch.com/watch/', _co.sermonData['permalink'], '');
        _ck(_v, 15, 0, currVal_1);
        var currVal_2 = _co.copyText;
        _ck(_v, 18, 0, currVal_2);
    });
}
function View_ShareComponent_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵand(16777216, null, null, 1, null, View_ShareComponent_1)), i1.ɵdid(1, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef,
            i1.TemplateRef], { ngIf: [0, 'ngIf'] }, null), (_l()(), i1.ɵted(-1, null, ['\n']))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.modalOpen;
        _ck(_v, 1, 0, currVal_0);
    }, null);
}
exports.View_ShareComponent_0 = View_ShareComponent_0;
function View_ShareComponent_Host_0(_l) {
    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, 'share', [], null, null, null, View_ShareComponent_0, exports.RenderType_ShareComponent)),
        i1.ɵdid(1, 114688, null, 0, i3.ShareComponent, [], null, null)], function (_ck, _v) {
        _ck(_v, 1, 0);
    }, null);
}
exports.View_ShareComponent_Host_0 = View_ShareComponent_Host_0;
exports.ShareComponentNgFactory = i1.ɵccf('share', i3.ShareComponent, View_ShareComponent_Host_0, { sermonData: 'sermonData', modalOpen: 'modalOpen' }, {}, []);
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL2hvbWUvYmx1ZWJlYXJkL2ZsYXRsYW5kY2h1cmNoLmNvbS9zcmMvYXBwL3ZpZGVvL3NoYXJlL3NoYXJlLmNvbXBvbmVudC5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9ob21lL2JsdWViZWFyZC9mbGF0bGFuZGNodXJjaC5jb20vc3JjL2FwcC92aWRlby9zaGFyZS9zaGFyZS5jb21wb25lbnQudHMiLCJuZzovLy9ob21lL2JsdWViZWFyZC9mbGF0bGFuZGNodXJjaC5jb20vc3JjL2FwcC92aWRlby9zaGFyZS9zaGFyZS5jb21wb25lbnQuaHRtbCIsIm5nOi8vL2hvbWUvYmx1ZWJlYXJkL2ZsYXRsYW5kY2h1cmNoLmNvbS9zcmMvYXBwL3ZpZGVvL3NoYXJlL3NoYXJlLmNvbXBvbmVudC50cy5TaGFyZUNvbXBvbmVudF9Ib3N0Lmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiICIsIjxkaXYgY2xhc3M9XCJtb2RhbCBzb2NpYWxcIiAqbmdJZj1cIm1vZGFsT3BlblwiPlxuXHQ8c3BhbiBjbGFzcz1cIm1vZGFsLWhlYWRlclwiPlNIQVJFIDxpIGNsYXNzPVwiZmEgZmEtc2hhcmVcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+PC9zcGFuPlxuXHQ8ZGl2IGNsYXNzPVwibW9kYWwtY2xvc2VcIiAoY2xpY2spPVwiY2xvc2VNb2RhbCgpXCI+PGkgY2xhc3M9XCJmYSBmYS10aW1lc1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT48L2Rpdj5cblx0PHVsPlxuXHRcdDxsaSAqbmdGb3I9XCJsZXQgc29jaWFsIG9mIHNvY2lhbExpbmtzXCI+XG5cdFx0XHQ8YSBbaHJlZl09XCJzb2NpYWwudXJsXCIgKGNsaWNrKT1cIm9wZW5MaW5rKHNvY2lhbC51cmwpXCI+PGkgY2xhc3M9XCJmYSB7eyBzb2NpYWwuaWNvbiB9fVwiPjwvaT48L2E+XG5cdFx0PC9saT5cblx0PC91bD5cblx0PGlucHV0IHR5cGU9XCJ0ZXh0XCIgaWQ9XCJmYy1zaGFyZS1saW5rXCIgdmFsdWU9XCJodHRwczovL2ZsYXRsYW5kY2h1cmNoLmNvbS93YXRjaC97eyBzZXJtb25EYXRhWydwZXJtYWxpbmsnXSB9fVwiPlxuXHQ8YSBjbGFzcz1cImNsaXBib2FyZC1jb3B5XCIgaHJlZj1cIi93YXRjaFwiIChjbGljayk9XCJjb3B5TGluaygkZXZlbnQpXCI+e3sgY29weVRleHQgfX08L2E+XG48L2Rpdj5cbiIsIjxzaGFyZT48L3NoYXJlPiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7b0JDSUU7TUFBQSx3RUFBdUM7YUFBQSw4QkFDdEM7TUFBQTtRQUFBO1FBQUE7UUFBdUI7VUFBQTtVQUFBO1FBQUE7UUFBdkI7TUFBQSxnQ0FBc0Q7TUFBQTtNQUFBLGdCQUF3Qzs7SUFBM0Y7SUFBSCxXQUFHLFNBQUg7SUFBeUQ7UUFBQTtJQUFILFdBQUcsU0FBSDs7OztvQkFMekQ7TUFBQTtNQUE0QywyQ0FDM0M7VUFBQTtVQUFBLDRDQUEyQjtVQUFBLGFBQU07VUFBQTtVQUFBLDhCQUFxRDtNQUN0RjtVQUFBO1lBQUE7WUFBQTtZQUF5QjtjQUFBO2NBQUE7WUFBQTtZQUF6QjtVQUFBLGdDQUFnRDtVQUFBO1VBQUEsNENBQW9EO1VBQUEsVUFDcEc7VUFBQTtNQUFJLDRDQUNIO1VBQUEsNkRBQUE7VUFBQTtVQUFBLHVDQUVLO1VBQUEsVUFDRCwyQ0FDTDtVQUFBO2NBQUE7TUFBNkcsMkNBQzdHO1VBQUE7VUFBQTtZQUFBO1lBQUE7WUFBd0M7Y0FBQTtjQUFBO1lBQUE7WUFBeEM7VUFBQSxnQ0FBbUU7TUFBa0I7O0lBTGhGO0lBQUosWUFBSSxTQUFKOzs7SUFJcUM7UUFBQTtJQUF0QyxZQUFzQyxTQUF0QztJQUNtRTtJQUFBOzs7O29CQVRwRTtNQUFBLCtCQUFBO29CQUFBLG1DQVVNO01BQUE7O0lBVm9CO0lBQTFCLFdBQTBCLFNBQTFCOzs7O29CQ0FBO01BQUE7YUFBQTtVQUFBO0lBQUE7Ozs7OyJ9
//# sourceMappingURL=data:application/json;charset=utf-8;base64,